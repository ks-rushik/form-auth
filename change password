// lib/supabaseActions.js
'use server'
import { createClient } from "../utils/supabase/server";

export const changePassword = async (newPassword) => {
  if (!newPassword) return { error: 'Password cannot be empty' };
    const supabase = await createClient();
  

  const { error } = await supabase.auth.updateUser({ password: newPassword });

  if (error) return { error: error.message };
  return { message: 'Password updated successfully!' };
};


'use client';

import { useState } from 'react';
import { changePassword } from '../lib/supabaseActions';

export default function ChangePasswordForm() {
  const [password, setPassword] = useState('');
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setMessage('');

    const { error, message: successMsg } = await changePassword(password);

    setMessage(error ? `❌ ${error}` : `✅ ${successMsg}`);
    setLoading(false);
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-4 max-w-sm">
      <div>
        <label htmlFor="new-password" className="block text-sm font-medium">
          New Password
        </label>
        <input
          type="password"
          id="new-password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
          className="w-full border px-2 py-1 rounded"
        />
      </div>
      <button
        type="submit"
        disabled={loading}
        className="bg-blue-500 text-white px-4 py-1 rounded"
      >
        {loading ? 'Updating...' : 'Change Password'}
      </button>
      {message && <p className="text-sm mt-2">{message}</p>}
    </form>
  );
}
