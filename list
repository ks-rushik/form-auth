import {
  NavLink,
  Collapse,
  List,
  ListItem,
} from "@mantine/core";
import { useState } from "react";
import { IconChevronUp, IconChevronDown } from "@tabler/icons-react";
import { IconInbox, IconStar, IconFile } from "@tabler/icons-react";

const NestedSidebar = () => {
  const [opened, setOpened] = useState(true);

  return (
    <div className="w-full">
      {/* Top-level NavLink */}
      <NavLink
        label="Inbox"
        leftSection={<IconInbox size={16} />}
        rightSection={
          opened ? <IconChevronUp size={16} /> : <IconChevronDown size={16} />
        }
        onClick={() => setOpened((o) => !o)}
        className="text-sm font-semibold text-gray-800"
      />

      {/* Nested Collapse Section */}
      <Collapse in={opened}>
        <List className="ml-5 mt-2">
          <ListItem icon={<IconStar size={16} />}>Starred</ListItem>
          <ListItem icon={<IconFile size={16} />}>Drafts</ListItem>
        </List>
      </Collapse>
    </div>
  );
};

export default NestedSidebar;


import { List, ListItem, UnstyledButton } from "@mantine/core";
import { useState } from "react";
import { IconChevronUp, IconChevronDown } from "@tabler/icons-react";
import clsx from "clsx";
import BaseList from "./BaseList"; // Assuming your BaseList is in the same folder

const NestedSidebar = () => {
  const [opened, setOpened] = useState(true);

  return (
    <BaseList>
      {/* Parent item with toggle */}
      <UnstyledButton
        onClick={() => setOpened(!opened)}
        className="flex items-center justify-between w-full text-[14px] font-semibold text-gray-800 pb-4"
      >
        <div className="flex items-center gap-2">
          <SvgIcon1 />
          Inbox
        </div>
        {opened ? <IconChevronUp size={16} /> : <IconChevronDown size={16} />}
      </UnstyledButton>

      {/* Nested items */}
      {opened && (
        <div className="ml-7">
          <ListItem icon={<StarIcon />}>Starred</ListItem>
          <ListItem icon={<ListIcon2 />}>Drafts</ListItem>
        </div>
      )}
    </BaseList>
  );
};

export default NestedSidebar;



"use client";

import React from "react";

type ThemeButtonProps = {
  theme: "dark" | "light";
  onChange: () => void;
};

const ThemeButton: React.FC<ThemeButtonProps> = ({ theme, onChange }) => {
  return (
    <label
      className="relative w-6 h-6  flex items-center justify-center rounded-full border-2 border-gray-800 shadow-[4px_4px_0px_0px_#333] bg-white active:shadow-none active:translate-x-[3px] active:translate-y-[3px]"
    >
      <input
        type="checkbox"
        className="absolute w-full h-full opacity-0 cursor-pointer z-10 "
        checked={theme === "dark"}
        onChange={onChange}
      />
      <svg
        className={`absolute w-4 h-4 fill-gray-800 transition-opacity  ${
          theme === "dark" ? "opacity-0" : "opacity-100"
        }`}
        viewBox="0 0 24 24"
      >
        <path d="m12.3 4.9c.4-.2.6-.7.5-1.1s-.6-.8-1.1-.8c-4.9.1-8.7 4.1-8.7 9 0 5 4 9 9 9 3.8 0 7.1-2.4 8.4-5.9.2-.4 0-.9-.4-1.2s-.9-.2-1.2.1c-1 .9-2.3 1.4-3.7 1.4-3.1 0-5.7-2.5-5.7-5.7 0-1.9 1.1-3.8 2.9-4.8zm2.8 12.5c.5 0 1 0 1.4-.1-1.2 1.1-2.8 1.7-4.5 1.7-3.9 0-7-3.1-7-7 0-2.5 1.4-4.8 3.5-6-.7 1.1-1 2.4-1 3.8-.1 4.2 3.4 7.6 7.6 7.6z" />
      </svg>

      <svg
        className={`absolute w-4 h-4 stroke-gray-800 transition-opacity ${
          theme === "dark" ? "opacity-100" : "opacity-0"
        }`}
        width={20}
        height={20}
        viewBox="0 0 24 24"
        strokeWidth={2}
        strokeLinejoin="round"
        strokeLinecap="round"
        fill="none"
      >
        <circle r={5} cy={12} cx={12} />
        <line y2={3} y1={1} x2={12} x1={12} />
        <line y2={23} y1={21} x2={12} x1={12} />
        <line y2="5.64" y1="4.22" x2="5.64" x1="4.22" />
        <line y2="19.78" y1="18.36" x2="19.78" x1="18.36" />
        <line y2={12} y1={12} x2={3} x1={1} />
        <line y2={12} y1={12} x2={23} x1={21} />
        <line y2="18.36" y1="19.78" x2="5.64" x1="4.22" />
        <line y2="4.22" y1="5.64" x2="19.78" x1="18.36" />
      </svg>
    </label>
  );
};

export default ThemeButton;


"use client";

import Link from "next/link";
import { Avatar, Menu } from "@mantine/core";
import Image from "next/image";
import logo2 from "../../images/logo2.png";
import LogOut from "../auth/Logout";
import { useState, useEffect } from "react";
import ThemeButton from "../ui/ThemeButton";
import { changeTheme } from "@/app/helper/changeTheme";

const Navbar = () => {
  const [theme, setTheme] = useState<"dark" | "light">();
  const [mounted, setMounted] = useState(false);
  const [opened, setOpened] = useState(false);

  useEffect(() => {
    const initialTheme = document.documentElement.classList.contains("dark") ? "dark" : "light";
    setTheme(initialTheme);
    setMounted(true);
  }, []);

  const handleThemeChange = async () => {
    await changeTheme();
    setTheme((prev) => (prev === "dark" ? "light" : "dark"));
  };

  useEffect(() => {
    if (theme) {
      document.documentElement.classList.toggle("dark", theme === "dark");
    }
  }, [theme]);

  return (
    <nav className="bg-white dark:bg-neutral-950 shadow-lg py-2 px-4 flex justify-between items-center">
      <div className="flex items-center">
        <Image
          src={logo2}
          width={100}
          height={100}
          alt="Website Logo"
          className="dark:bg-black"
        />
      </div>

      <div className="flex flex-row items-center gap-4">
        {mounted && theme && (
          <ThemeButton theme={theme} onChange={handleThemeChange} />
        )}

        <Menu
          opened={opened}
          onChange={setOpened}
          zIndex={0}
          classNames={{ item: "font-[650] z-10 bg-white" }}
        >
          <Menu.Target>
            <Avatar
              src="https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-1.png"
              alt="User Avatar"
              size={"lg"}
              classNames={{
                root: "transition delay-100 duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 xl:mr-1",
              }}
            />
          </Menu.Target>

          <Menu.Dropdown style={{ zIndex: 20 }} className="dark:bg-black dark:border-black">
            <Menu.Item classNames={{ item: "text-black dark:bg-gray-700 dark:text-white" }}>
              <Link href="/userprofile" className="block px-3 py-1">Profile Page</Link>
            </Menu.Item>
            <Menu.Item component={LogOut}>LogOut</Menu.Item>
          </Menu.Dropdown>
        </Menu>
      </div>
    </nav>
  );
};


export default Navbar;
